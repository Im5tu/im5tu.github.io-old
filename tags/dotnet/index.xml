<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dotnet on Stuart Blackler&#39;s Blog</title>
    <link>https://im5tu.io/tags/dotnet/</link>
    <description>Recent content in dotnet on Stuart Blackler&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 25 Jan 2020 13:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://im5tu.io/tags/dotnet/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Diagnostics in .Net Core 3: Using dotnet-counters with Docker</title>
      <link>https://im5tu.io/article/2020/01/diagnostics-in-.net-core-3-using-dotnet-counters-with-docker/</link>
      <pubDate>Sat, 25 Jan 2020 13:00:00 +0000</pubDate>
      
      <guid>https://im5tu.io/article/2020/01/diagnostics-in-.net-core-3-using-dotnet-counters-with-docker/</guid>
      <description>&lt;p&gt;In my &lt;a href=&#34;https://im5tu.io/article/2020/01/diagnostics-in-.net-core-3-event-counters/&#34;&gt;previous post&lt;/a&gt;, I described how we can leverage the new EventCounter diagnostics API to add custom event counters and listen for built in counters. In this article, I will walk through how we can leverage the &lt;code&gt;dotnet-counters&lt;/code&gt; tool with a running docker image.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Diagnostics in .Net Core 3: Event Counters</title>
      <link>https://im5tu.io/article/2020/01/diagnostics-in-.net-core-3-event-counters/</link>
      <pubDate>Sun, 05 Jan 2020 14:00:00 +0000</pubDate>
      
      <guid>https://im5tu.io/article/2020/01/diagnostics-in-.net-core-3-event-counters/</guid>
      <description>&lt;p&gt;Recently, I&#39;ve been playing with the new &lt;a href=&#34;https://devblogs.microsoft.com/dotnet/introducing-diagnostics-improvements-in-net-core-3-0/&#34;&gt;diagnostic improvements in .Net Core 3&lt;/a&gt;. Traditionally, I&#39;ve always used the great &lt;a href=&#34;https://github.com/AppMetrics/AppMetrics&#34;&gt;AppMetrics&lt;/a&gt; package to capture the metrics from our applications and send scrape them with a &lt;a href=&#34;https://github.com/prometheus/prometheus&#34;&gt;Prometheus&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/grafana/grafana&#34;&gt;Grafana&lt;/a&gt; setup. Whilst reading about the improvements, I wondered whether or not it would be possible to push metrics to &lt;a href=&#34;https://github.com/prometheus/prometheus&#34;&gt;Prometheus&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Utf8Json Media Formatters for ASP.Net Core</title>
      <link>https://im5tu.io/article/2018/07/utf8json-media-formatters-for-asp.net-core/</link>
      <pubDate>Sun, 29 Jul 2018 16:40:00 +0100</pubDate>
      
      <guid>https://im5tu.io/article/2018/07/utf8json-media-formatters-for-asp.net-core/</guid>
      <description>Recently, I have been looking at the Utf8Json project and evaluating for use in our high performance payments API. Looking at the benchmarks on the Github page, and running my own benchmarks, the numbers stated seemed to tally up, so I built a few media formatters for aspnet core.
Now, the project does already ship with some media formatters as a separate nuget package. However, I wanted to improve the following things:</description>
    </item>
    
    <item>
      <title>Talks: Episerver Content Providers &amp; Lightening Talk</title>
      <link>https://im5tu.io/article/2017/04/talks-episerver-content-providers-lightening-talk/</link>
      <pubDate>Tue, 04 Apr 2017 10:38:38 +0100</pubDate>
      
      <guid>https://im5tu.io/article/2017/04/talks-episerver-content-providers-lightening-talk/</guid>
      <description>&lt;p&gt;On the 23rd of March, I had the opportunity to present at the Episerver meetup in Redweb&#39;s London offices. I ended up giving two talks: Episerver Content Providers &amp;amp; a 5 minute lightening talk.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OpenMessage 2017 Roadmap</title>
      <link>https://im5tu.io/article/2017/02/openmessage-2017-roadmap/</link>
      <pubDate>Sat, 11 Feb 2017 12:15:27 +0000</pubDate>
      
      <guid>https://im5tu.io/article/2017/02/openmessage-2017-roadmap/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/im5tu/openmessage&#34;&gt;OpenMessage&lt;/a&gt; originally started out as a replacement for an internal library that was used across teams. At the time, the team I was apart of needed the latest version of dotnet core for the library where as the other team were stuck on RC1. They were also developing features for that version of the framework and a few pre-existing details that we were unhappy with (eg: the request/response implementation). With that in mind, I created a minimal wrapper for what we needed. Looking forward, I plan to dedicate a bit more time to the project and improve it.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OpenMessage 1.1 Released</title>
      <link>https://im5tu.io/article/2017/02/openmessage-1.1-released/</link>
      <pubDate>Sun, 05 Feb 2017 15:31:54 +0000</pubDate>
      
      <guid>https://im5tu.io/article/2017/02/openmessage-1.1-released/</guid>
      <description>&lt;p&gt;Just a quick update to say that the Azure provider for &lt;a href=&#34;https://github.com/Im5tu/OpenMessage&#34;&gt;OpenMessage&lt;/a&gt; has been released. This update fixes an issue with scheduling messages on topics.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DevOps</title>
      <link>https://im5tu.io/article/2015/01/devops/</link>
      <pubDate>Sat, 24 Jan 2015 18:36:29 +0000</pubDate>
      
      <guid>https://im5tu.io/article/2015/01/devops/</guid>
      <description>&lt;p&gt;As part of my role as a .Net Developer, I have recently been getting to grips with the build and deployment features of both Teamcity and Octopus Deploy. This has been making me think about the industry buzz word &amp;ldquo;DevOps&amp;rdquo; and exactly what that means.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Dev Lunches: What, Why, How</title>
      <link>https://im5tu.io/article/2014/12/dev-lunches-what-why-how/</link>
      <pubDate>Wed, 17 Dec 2014 18:36:09 +0000</pubDate>
      
      <guid>https://im5tu.io/article/2014/12/dev-lunches-what-why-how/</guid>
      <description>&lt;p&gt;If you&#39;re not up-to-date, you fall behind. You fall behind in your work, which leads you to fall behind at home. If continued, it&#39;s a never ending circle that can seem like climbing Everest in order to overcome. I propose that we, as developers, start doing is utilizing our free time to help not only ourselves but our co-workers too. We can do this via dev lunches.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Message Queue Fundementals: MSMQ</title>
      <link>https://im5tu.io/article/2014/09/message-queue-fundementals-msmq/</link>
      <pubDate>Sun, 28 Sep 2014 18:35:57 +0000</pubDate>
      
      <guid>https://im5tu.io/article/2014/09/message-queue-fundementals-msmq/</guid>
      <description>&lt;p&gt;MSMQ is Microsoft&#39;s Message Queuing service that can be used to implement both synchronous and asynchronous solutions. Typically solutions are architectured using the available C++ APIâ€™s or via the relevant COM objects. The .Net Framework exposes the System.Messaging namespace which contains all the classes that you need to work with the MSMQ API.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Message Queue Fundementals: Introduction</title>
      <link>https://im5tu.io/article/2014/09/message-queue-fundementals-introduction/</link>
      <pubDate>Sun, 07 Sep 2014 18:35:37 +0000</pubDate>
      
      <guid>https://im5tu.io/article/2014/09/message-queue-fundementals-introduction/</guid>
      <description>&lt;p&gt;Message queues are a substantial part of modern day enterprise architectures and a vital part of providing scalable solutions. They are designed for asynchronous communication between different parts of the system. They help scale individual components of a system and increase reliability with the optional addition of the persistence of messages to a storage system.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Finding Reducible Expressions</title>
      <link>https://im5tu.io/article/2014/06/finding-reducible-expressions/</link>
      <pubDate>Tue, 24 Jun 2014 09:21:19 +0000</pubDate>
      
      <guid>https://im5tu.io/article/2014/06/finding-reducible-expressions/</guid>
      <description>&lt;p&gt;Today I just wanted to share a quick note regarding &lt;a href=&#34;http://stackoverflow.com/a/2040097/315711&#34;&gt;a Stack Overflow answer&lt;/a&gt; that I recently came across. In the answer the author explains that a call to &lt;code&gt;Expression.CanReduce&lt;/code&gt; will typically return false, while &lt;code&gt;Expression.Reduce()&lt;/code&gt; will return the current expression. The author continues to state that one of the types that overrides &lt;code&gt;Expression.Reduce()&lt;/code&gt; and &lt;code&gt;Expression.CanReduce&lt;/code&gt; is &lt;code&gt;MemberInitExpression&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How your binary search implementation is broken and how to fix it</title>
      <link>https://im5tu.io/article/2014/06/how-your-binary-search-implementation-is-broken-and-how-to-fix-it/</link>
      <pubDate>Fri, 20 Jun 2014 18:21:04 +0000</pubDate>
      
      <guid>https://im5tu.io/article/2014/06/how-your-binary-search-implementation-is-broken-and-how-to-fix-it/</guid>
      <description>&lt;p&gt;I have recently begun studying the theory and implementations of algorithms. During this study, I came across &lt;a href=&#34;http://googleresearch.blogspot.co.uk/2006/06/extra-extra-read-all-about-it-nearly.html&#34;&gt;this post&lt;/a&gt; which describes how a bug exists in most implementations of a binary search algorithm.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Unit Testing Equals The Forgotten Tests</title>
      <link>https://im5tu.io/article/2014/06/unit-testing-equals-the-forgotten-tests/</link>
      <pubDate>Wed, 18 Jun 2014 18:20:25 +0000</pubDate>
      
      <guid>https://im5tu.io/article/2014/06/unit-testing-equals-the-forgotten-tests/</guid>
      <description>&lt;p&gt;Today I wanted to cover something that is not often covered when unit testing an object. If an object has the &lt;code&gt;Equals&lt;/code&gt; method overridden, then there are a number of tests that we should be running as a minimum:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Enabling HTTP Strict Transport Security HSTS via Web Config</title>
      <link>https://im5tu.io/article/2014/06/enabling-http-strict-transport-security-hsts-via-web-config/</link>
      <pubDate>Tue, 10 Jun 2014 18:19:47 +0000</pubDate>
      
      <guid>https://im5tu.io/article/2014/06/enabling-http-strict-transport-security-hsts-via-web-config/</guid>
      <description>&lt;p&gt;In my previous post, I discussed how to &lt;a href=&#34;https://im5tu.io/article/2014/04/enabling-http-strict-transport-security-hsts-via-asp-net-mvc-actionfilters/&#34;&gt;enable HSTS via MVC Action Filters&lt;/a&gt;. I thought that I would just do a follow up post showing you how to enable it via the web.config.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Enabling HTTP Strict Transport Security HSTS via ASP Net MVC ActionFilters</title>
      <link>https://im5tu.io/article/2014/04/enabling-http-strict-transport-security-hsts-via-asp-net-mvc-actionfilters/</link>
      <pubDate>Mon, 21 Apr 2014 18:19:47 +0000</pubDate>
      
      <guid>https://im5tu.io/article/2014/04/enabling-http-strict-transport-security-hsts-via-asp-net-mvc-actionfilters/</guid>
      <description>&lt;p&gt;After reading &lt;a href=&#34;http://www.troyhunt.com/&#34;&gt;Troy Hunt&#39;s&lt;/a&gt; free ebook on the &lt;a href=&#34;http://www.troyhunt.com/2011/12/free-ebook-owasp-top-10-for-net.html&#34;&gt;OWASP Top 10 for .Net Developers&lt;/a&gt;, I discovered an additional mechanism to help developers secure their websites. That mechanism is HTTP Strict Transport Security.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SAP Business One V9 Version Strings</title>
      <link>https://im5tu.io/article/2014/03/sap-business-one-v9-version-strings/</link>
      <pubDate>Sat, 15 Mar 2014 13:18:01 +0000</pubDate>
      
      <guid>https://im5tu.io/article/2014/03/sap-business-one-v9-version-strings/</guid>
      <description>&lt;p&gt;Today I had to figure out what the current version of SAP Business One is. In order to do this, I looked at the table SFMD inside of SBO-Common and found the following results&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Becoming An MCP</title>
      <link>https://im5tu.io/article/2013/06/becoming-an-mcp/</link>
      <pubDate>Mon, 10 Jun 2013 20:14:39 +0000</pubDate>
      
      <guid>https://im5tu.io/article/2013/06/becoming-an-mcp/</guid>
      <description>&lt;p&gt;As the title suggests, today I passed the 70-483 Programming in C# exam to offically become a Microsoft Certifed Professional.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Using IDisposible correctly</title>
      <link>https://im5tu.io/article/2013/05/using-idisposible-correctly/</link>
      <pubDate>Mon, 06 May 2013 18:09:25 +0000</pubDate>
      
      <guid>https://im5tu.io/article/2013/05/using-idisposible-correctly/</guid>
      <description>&lt;p&gt;In this article, I am going to show you how to use the &lt;code&gt;IDisposable&lt;/code&gt; interface correctly in your code. When I read others code, it is easy to pick up on subtle bugs. We need to begin to train ourselves to see the bugs and we do this by understanding what we are using. Before we begin, we need to make sure that we understand a core piece of computer science theory: Destructors.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Semaphore vs SeamphoreSlim Micro Benchmark</title>
      <link>https://im5tu.io/article/2013/03/semaphore-vs-seamphoreslim-micro-benchmark/</link>
      <pubDate>Mon, 11 Mar 2013 18:06:28 +0000</pubDate>
      
      <guid>https://im5tu.io/article/2013/03/semaphore-vs-seamphoreslim-micro-benchmark/</guid>
      <description>&lt;p&gt;In this post, I am going to show a small micro-benchmark to demonstrate the performance difference between the &lt;code&gt;Semaphore&lt;/code&gt; and &lt;code&gt;SemaphoreSlim&lt;/code&gt; classes in C#. A &lt;code&gt;Semaphore&lt;/code&gt; is often used to restrict the number of threads than can access some (physical or logical) resource. In this case, we want the restriction to be as little as possible.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Flicker free forms and listview in .Net</title>
      <link>https://im5tu.io/article/2012/12/flicker-free-forms-and-listview-in-.net/</link>
      <pubDate>Sun, 30 Dec 2012 14:51:38 +0000</pubDate>
      
      <guid>https://im5tu.io/article/2012/12/flicker-free-forms-and-listview-in-.net/</guid>
      <description>&lt;p&gt;On a project I have been working on recently, I came across a problem where under Windows an Mdi Child form would flicker when it loads. Trying to find information on what was the cause of this was near impossible. I ended up trying a lot of code snippets that I found when googling the problem and this is what I have come up with.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Extension methods in dotnet</title>
      <link>https://im5tu.io/article/2012/12/extension-methods-in-dotnet/</link>
      <pubDate>Sat, 01 Dec 2012 17:51:38 +0000</pubDate>
      
      <guid>https://im5tu.io/article/2012/12/extension-methods-in-dotnet/</guid>
      <description>&lt;p&gt;In this article we will take a look at what extension methods are and how to use them in .Net. Personally, they are one of the best things that has been introduced into the .Net framework in terms of readability. I will take you through what extension methods are, how to create them (in c# and vb) then I will show you some of the extension methods that I have created (in c# only, conversion is for you to try).&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>