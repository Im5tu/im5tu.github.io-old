<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Architecture on Stuart Blackler's Blog</title><link>https://im5tu.io/tags/architecture/</link><description>Recent content in Architecture on Stuart Blackler's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 05 Dec 2020 15:38:58 +0000</lastBuildDate><atom:link href="https://im5tu.io/tags/architecture/index.xml" rel="self" type="application/rss+xml"/><item><title>Building a Zero Trust Architecture In AWS</title><link>https://im5tu.io/article/2020/12/building-a-zero-trust-architecture-in-aws/</link><pubDate>Sat, 05 Dec 2020 15:38:58 +0000</pubDate><guid>https://im5tu.io/article/2020/12/building-a-zero-trust-architecture-in-aws/</guid><description>&lt;p>In the vast majority of companies that I&amp;rsquo;ve been in, software engineering &amp;amp; infrastructure best practises have often been left as something that needs to be updated later because building the product comes first. This is completely understandable as if you don&amp;rsquo;t have a product, you don&amp;rsquo;t have employment. This presents problems later when companies are beginning to scale rapidly and become popular. Not only does the company becomes a target for malicious actors, but security-related incidents can easily occur by leaving storage devices open accidentally. Once a malicious actor is in your system, you usually have pretty big problems unless you design your architectures with Zero Trust in mind.&lt;/p></description></item><item><title>Architecture Pathway Introduction</title><link>https://im5tu.io/article/2020/07/architecture-pathway-introduction/</link><pubDate>Wed, 15 Jul 2020 20:56:00 +0100</pubDate><guid>https://im5tu.io/article/2020/07/architecture-pathway-introduction/</guid><description>&lt;p>Over the past year or so, I&amp;rsquo;ve had the pleasure of mentoring people on their software development journeys. Some of those personnel have expressed a desire to pursue the software architect route. As it&amp;rsquo;s something that I often refer to, I&amp;rsquo;ve decided to post a mini-pathway to help guide on some of the basics.&lt;/p></description></item><item><title>Domain Driven Design Notes</title><link>https://im5tu.io/article/2017/05/domain-driven-design-notes/</link><pubDate>Wed, 24 May 2017 16:25:48 +0100</pubDate><guid>https://im5tu.io/article/2017/05/domain-driven-design-notes/</guid><description>These are my notes on domain driven design whilst watching the course by Dino Esposito on Pluralsight.
Domain Driven Design (or DDD), is the process of discovering both data and behavioural requirements for a given problem domain where traditional approaches usually focus purely on data collection aspects. The aim is to provide better tools to tackle the complexity at the heart of software. Within DDD, there are two distinct parts: an analytical one and a strategical one.</description></item></channel></rss>